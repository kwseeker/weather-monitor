buildscript {
	ext {
		springBootVersion = '2.0.0.M3'
		springCloudVersion = 'Finchley.M2'
	}
	repositories {
//		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
	}
	dependencies {
		// classpath 声明了在执行其余的脚本时，ClassLoader 可以使用这些依赖项
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

//应用于所有模块的配置
allprojects {
	apply plugin: 'java'
	apply plugin: 'idea'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	repositories {
		//mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
	}

	group = 'top.kwseeker'
	sourceCompatibility = 1.8
}

//应用于所有子模块的配置
subprojects {
	dependencies {
		testImplementation('org.springframework.boot:spring-boot-starter-test')
	}
}

project(':weather-view') {
	dependencies {
		// implementation()不会传递依赖，compile()会传递依赖
		//implementation('org.springframework.boot:spring-boot-starter-web')
		compile('org.springframework.boot:spring-boot-starter-web')

		// HttpClient
		compile('org.apache.httpcomponents:httpclient:4.5.3')
		// Redis
		compile('org.springframework.boot:spring-boot-starter-data-redis')
		// Quartz
		compile('org.springframework.boot:spring-boot-starter-quartz')
	}
}

project(':weather-service') {
	dependencies {
		// implementation()不会传递依赖，compile()会传递依赖
		compile('org.springframework.boot:spring-boot-starter-web')

		// HttpClient
		compile('org.apache.httpcomponents:httpclient:4.5.3')
		// Redis
		compile('org.springframework.boot:spring-boot-starter-data-redis')
		// Quartz
		compile('org.springframework.boot:spring-boot-starter-quartz')
	}
}